#!/usr/bin/env python
import roslib;roslib.load_manifest('[%=package.name%]')

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

[%for (param in node.parameter) {
if(param.obligatory == false){
	if(param.type.toString() == "string"){
%]
gen.add("[%=param.name.replace(" ", "_")%]", str_t, 0, "Autogenerated parameter based on model.", "[%=param.value%]")
[%	}
	else{
		if(param.type.toString() == "bool"){
%]
gen.add("[%=param.name.replace(" ", "_")%]", [%=param.type.toString()%]_t, 0, "Autogenerated parameter based on model.", [%=param.value%])
[% 		}
		else{
			if(param.type.toString() == "XmlRpcValue"){}
			else{
				if(not param.min_value.isUndefined()){ 
					if(param.min_value.toString() == ""){
%]
gen.add("[%=param.name.replace(" ", "_")%]", [%=param.type.toString()%]_t, 0, "Autogenerated parameter based on model.", [%=param.value%])
[%			
					}
					else{%]
gen.add("[%=param.name.replace(" ", "_")%]", [%=param.type.toString()%]_t, 0, "Autogenerated parameter based on model.", [%=param.value%], [%=param.min_value%], [%=param.max_value%])
[%					}
				}
				else{%]
gen.add("[%=param.name.replace(" ", "_")%]", [%=param.type.toString()%]_t, 0, "Autogenerated parameter based on model.", [%=param.value%])	
[%				}
			}
		}
	}
}
}%]

exit(gen.generate("[%=package.name%]", "[%=package.name%]", "[%=node.name.replace(" ", "_")%]"))
